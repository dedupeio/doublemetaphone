name: tests

on: [push]

jobs:
  test:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        python-version: [3.9, "3.10", "3.11", "3.12", "3.13"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install -e .
    - name: Test with pytest
      run: |        
        pip install -r requirements.txt
        pytest
  wheels:
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')  
    needs: test
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
    - name: Set up QEMU
      if: runner.os == 'Linux'
      uses: docker/setup-qemu-action@v2
      with:
        platforms: all    
    - name: Build wheels
      uses: pypa/cibuildwheel@v2.23.3
      env:
        CIBW_ARCHS_MACOS: x86_64 arm64 universal2
        CIBW_ARCHS_LINUX: auto aarch64
        CIBW_SKIP: pp38-manylinux_* pp39-* pp310-* pp311-* pp312-* pp313-*
    - name: Build sdist
      run: |
        pip install cython wheel setuptools
        python setup.py sdist
    - name: Publish wheels to PyPI
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        pip install twine
        twine upload --skip-existing wheelhouse/*.whl
        twine upload dist/*
      continue-on-error: true
